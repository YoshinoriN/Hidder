<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="d"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <!--Colors-->
    <Color x:Key="BaseBackGroundColor">#222222</Color>
    <Color x:Key="BaseSecondlyBackGroundColor">#333333</Color>
    <Color x:Key="BaseForeGroundColor">#A9A9A9</Color>
    <Color x:Key="BaseLightForeGroundColor">#FFF8F8FF</Color>
    <Color x:Key="BaseBorderBrushColor">#696969</Color>
    <Color x:Key="BaseForcusdBorderBrush">#1E90FF</Color>

    <SolidColorBrush x:Key="StandardBackGroundColor" Color="{StaticResource BaseBackGroundColor}" po:Freeze="true"/>
    <SolidColorBrush x:Key="SecondlyBackGroundColor" Color="{StaticResource BaseSecondlyBackGroundColor}" po:Freeze="true"/>
    <SolidColorBrush x:Key="StandardForeGroundColor" Color="{StaticResource BaseForeGroundColor}" po:Freeze="true"/>
    <SolidColorBrush x:Key="LightForeGroundColor" Color="{StaticResource BaseLightForeGroundColor}" po:Freeze="true"/>
    <SolidColorBrush x:Key="StandardBorderBrushColor" Color="{StaticResource BaseBorderBrushColor}" po:Freeze="true"/>
    <SolidColorBrush x:Key="ForcusdBorderBrush" Color="{StaticResource BaseForcusdBorderBrush}" po:Freeze="true"/>

    <Color x:Key="PrimaryColor">#f9f9e4</Color>
    <Color x:Key="SecondaryColor">#e0e3bc</Color>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}" po:Freeze="true"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{DynamicResource SecondaryColor}" po:Freeze="true"/>

    <!--ボーダー-->
    <Style TargetType="Border">
        <Setter Property="Background" Value="{StaticResource StandardBackGroundColor}"/>
    </Style>

    <!--右上のボタン-->
    <Style x:Key="CaptionButtonStyleKey" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource StandardBackGroundColor}" />
        <Setter Property="FontFamily" Value="Marlett"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0"/>
                        </Border.Effect>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <!--メニュー-->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="#3D3D3D" />
        <Setter Property="Foreground" Value="{StaticResource StandardForeGroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrushColor}" />
    </Style>

    <!--テキストブロック-->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource StandardForeGroundColor}" />
    </Style>

    <!--テキストボックス-->
    <!--Triggerを使用するために各画面で個別に継承させる-->
    <Style x:Key="TextBoxStyle"  TargetType="TextBox">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource LightForeGroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrushColor}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="CaretBrush" Value="{StaticResource StandardForeGroundColor}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ForcusdBorderBrush}"/>
                <Setter Property="BorderThickness" Value="2.2"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrushColor}" />
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ボタン-->
    <!--Triggerを使用するために各画面で個別に継承させる-->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Control.Background" Value="{x:Null}" />
        <Setter Property="Control.Foreground" Value="{StaticResource StandardForeGroundColor}" />
        <Setter Property="Control.BorderBrush" Value="{x:Null}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="80" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <!--以下、共通のStaticResouceに書きたい-->
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#111111" To="#111111" Duration="0" po:Freeze="true"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#E6E6FA" To="#E6E6FA" Duration="0" po:Freeze="true"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#E6E6FA" To="#E6E6FA" Duration="0" po:Freeze="true"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--タブ-->
    <Style d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource StandardForeGroundColor}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Border x:Name="border" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0.5">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.976" StartPoint="0.5,0.039" po:Freeze="true">
                                    <GradientStop Color="#7F595959" Offset="0" />
                                    <GradientStop Color="#19FFFFFF" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="SelectedBorder" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0" Background="{StaticResource StandardBackGroundColor}"/>
                        <Border x:Name="HoverBorder" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.976" StartPoint="0.5,0.039" po:Freeze="true">
                                    <GradientStop Color="#7F595959" Offset="0" />
                                    <GradientStop Color="#19FFFFFF" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Grid>
                            <ContentPresenter x:Name="ContentSite" RecognizesAccessKey="True" ContentSource="Header" d:LayoutOverrides="Width, Height" HorizontalAlignment="Center" Margin="6,1,6,1" VerticalAlignment="Center" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource StandardForeGroundColor}" />
                            <Setter Property="Background" Value="{StaticResource StandardBackGroundColor}"/>
                            <Setter Property="Opacity" TargetName="grid" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--データグリッド-->
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource StandardBackGroundColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrushColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource StandardBorderBrushColor}" />
        <Setter Property="RowBackground" Value="{StaticResource StandardBackGroundColor}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource SecondlyBackGroundColor}" />
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="SelectionUnit" Value="CellOrRowHeader" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#3D3D3D"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrushColor}" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>
    <Style TargetType="DataGridRowHeader">
        <Setter Property="Background" Value="{StaticResource StandardBackGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource StandardForeGroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrushColor}" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Width" Value="10" />
    </Style>
    
    <!--スクロールバー-->
    <Style TargetType="ScrollBar">
        <Style.Resources>
            <Style x:Key="ScrollBarButton" TargetType="RepeatButton">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Foreground" Value="{StaticResource StandardForeGroundColor}" />
                <Setter Property="Background" Value="{StaticResource StandardBackGroundColor}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="{TemplateBinding Background}">
                                <Path Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{x:Null}" Width="8" Height="4" Data="M3.9375,0.5 L7.5,3.5 0.5,3.5 z" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="Thumb">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="grid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Rectangle Stroke="{DynamicResource SecondaryBrush}" StrokeThickness="0.5" Grid.RowSpan="1" x:Name="Background">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="1.629,0.503" StartPoint="0.004,0.5" po:Freeze="true">
                                            <GradientStop Color="{DynamicResource PrimaryColor}" Offset="0" />
                                            <GradientStop Color="{DynamicResource SecondaryColor}" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Stroke="{x:Null}" Grid.RowSpan="1" Visibility="Collapsed" x:Name="Disable">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource DisabledColor}" po:Freeze="true"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter Property="Fill" TargetName="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="1.629,0.503" StartPoint="0.004,0.5" po:Freeze="true">
                                                <GradientStop Color="{DynamicResource PrimaryColor}" Offset="0.21" />
                                                <GradientStop Color="{DynamicResource SecondaryColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="Disable" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="Background">
                                    <Setter Property="Fill" TargetName="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="1.629,0.503" StartPoint="0.004,0.5" po:Freeze="true">
                                                <GradientStop Color="{DynamicResource PrimaryColor}" Offset="0.625" />
                                                <GradientStop Color="{DynamicResource SecondaryColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="3" BorderBrush="{DynamicResource SecondaryBrush}" BorderThickness="0.5,0.5,1.5,1.5" CornerRadius="8,8,8,8">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1.046,0.517" StartPoint="-0.087,0.476" po:Freeze="true">
                                    <GradientStop Color="{DynamicResource SecondaryColor}" Offset="0" />
                                    <GradientStop Color="#FFFFF7EC" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}" />
                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}" Background="{StaticResource StandardBackGroundColor}">
                                    <RepeatButton.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,0.105" StartPoint="0.5,0.96" po:Freeze="true">
                                            <GradientStop Color="#A5FFFFFF" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="1" />
                                            <GradientStop Color="#59FFFFFF" Offset="0.339" />
                                        </LinearGradientBrush>
                                    </RepeatButton.OpacityMask>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}" Background="{StaticResource StandardBackGroundColor}">
                                    <RepeatButton.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" po:Freeze="true">
                                            <GradientStop Color="#A5000000" Offset="0" />
                                            <GradientStop Color="#00FFFFFF" Offset="1" />
                                            <GradientStop Color="#592F2F2F" Offset="0.232" />
                                        </LinearGradientBrush>
                                    </RepeatButton.OpacityMask>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" x:Name="thumb" Margin="0,0,0.5,0" BorderThickness="1,1,1,1" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                        <Border BorderBrush="{DynamicResource SecondaryBrush}" CornerRadius="8,8,8,8" Grid.RowSpan="3" x:Name="DisableLayer" Visibility="Collapsed">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource DisabledColor}" po:Freeze="true"/>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="DisableLayer" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrushColor}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="3" Grid.RowSpan="1" BorderThickness="0.5,0.5,1.5,1.5" CornerRadius="8,8,8,8">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" po:Freeze="true">
                                            <GradientStop Color="{DynamicResource SecondaryColor}" Offset="0" />
                                            <GradientStop Color="#FFFFF7EC" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}">
                                    <RepeatButton.LayoutTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="-90" />
                                        </TransformGroup>
                                    </RepeatButton.LayoutTransform>
                                </RepeatButton>
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}" Background="{StaticResource StandardBackGroundColor}">
                                            <RepeatButton.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" po:Freeze="true">
                                                    <GradientStop Color="#A5000000" Offset="0" />
                                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                                    <GradientStop Color="#593A3A3A" Offset="0.254" />
                                                </LinearGradientBrush>
                                            </RepeatButton.OpacityMask>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}" Background="{StaticResource StandardBackGroundColor}">
                                            <RepeatButton.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1" po:Freeze="true">
                                                    <GradientStop Color="#A5000000" Offset="0" />
                                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                                    <GradientStop Color="#595C5C5C" Offset="0.304" />
                                                </LinearGradientBrush>
                                            </RepeatButton.OpacityMask>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}">
                                    <RepeatButton.LayoutTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90" />
                                        </TransformGroup>
                                    </RepeatButton.LayoutTransform>
                                </RepeatButton>
                                <Border CornerRadius="8,8,8,8" Grid.ColumnSpan="3" x:Name="DisableLayer" Visibility="Collapsed">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource DisabledColor}" po:Freeze="true"/>
                                    </Border.Background>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="DisableLayer" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>